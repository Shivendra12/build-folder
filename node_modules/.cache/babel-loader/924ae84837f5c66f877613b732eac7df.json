{"ast":null,"code":"var _jsxFileName = \"/home/shivendra/Documents/shiv/reactbasicform/src/component/signup.js\";\nimport React, { Component } from 'react';\nimport validator from 'validator';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nclass signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: {\n        value: '',\n        isValidate: true,\n        message: ''\n      },\n      email: {\n        value: '',\n        isValidate: true,\n        message: ''\n      },\n      password: {\n        value: '',\n        isValidate: true,\n        message: ''\n      }\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeEmail = this.handleChangeEmail.bind(this);\n    this.handleChangePassword = this.handleChangePassword.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  handleChangeName(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    let state = this.state;\n    state[name].message = '';\n    state[name].value = value;\n    this.setState(state);\n  }\n\n  handleChangeEmail(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    let state = this.state;\n    state[name].message = '';\n    state[name].value = value;\n    this.setState(state);\n  }\n\n  handleChangePassword(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    let state = this.state;\n    state[name].message = '';\n    state[name].value = value;\n    this.setState(state);\n  }\n\n  validate() {\n    let state = this.state;\n\n    if (validator.isEmpty(state.name.value)) {\n      state.name.isValidate = false;\n      state.name.message = \"Name Cannot Be Blank\";\n      this.setState(state);\n      return false;\n    }\n\n    if (validator.isEmpty(state.email.value)) {\n      state.email.isValidate = false;\n      state.email.message = \"E-mail Cannot Be Blank\";\n      this.setState(state);\n      return false;\n    }\n\n    if (!validator.isEmail(state.email.value)) {\n      state.email.isValidate = false;\n      state.email.message = \"Invalid E-mail\";\n      this.setState(state);\n      return false;\n    }\n\n    if (validator.isEmpty(state.password.value)) {\n      state.password.isValidate = false;\n      state.password.message = \"Password Cannot Be Blank\";\n      this.setState(state);\n      return false;\n    }\n\n    return true;\n  }\n\n  register(event) {\n    event.preventDefault();\n    const isValid = this.validate();\n\n    if (isValid) {\n      let obj = {};\n      obj.name = this.state['name'].value;\n      obj.email = this.state['email'].value;\n      obj.password = this.state['password'].value;\n      axios.post('http://localhost:3100/api/signup', obj).then(response => {\n        if (response.data.status === true) {\n          swal(\"Successful\", `${response.data.message}`, \"success\").then(d => {\n            if (d) return this.props.history.replace('/');\n          });\n        } else {\n          swal(\"Error\", `${response.data.message}`, \"error\").then(d => {\n            if (d) return this.props.history.replace('/signup');\n          });\n        }\n      });\n    }\n  }\n\n  signin() {\n    return this.props.history.push('/');\n  }\n\n  render() {\n    const state = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      style: {\n        marginLeft: 80\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, \"Registration Info\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"name\",\n      className: \"form-control\",\n      name: \"name\",\n      value: state.name.value,\n      onChange: this.handleChangeName,\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }\n    }, state.name.message)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control\",\n      name: \"email\",\n      value: state.email.value,\n      onChange: this.handleChangeEmail,\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, state.email.message)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      name: \"password\",\n      value: state.password.value,\n      onChange: this.handleChangePassword,\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        fontSize: 13,\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, state.password.message)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, \"Submit\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        marginTop: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, \"Already You Have An Account ?\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      onClick: this.signin.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"Login\")));\n  }\n\n}\n\n;\nexport default signup;","map":{"version":3,"sources":["/home/shivendra/Documents/shiv/reactbasicform/src/component/signup.js"],"names":["React","Component","validator","axios","swal","signup","constructor","props","state","name","value","isValidate","message","email","password","handleChangeName","bind","handleChangeEmail","handleChangePassword","register","event","target","setState","validate","isEmpty","isEmail","preventDefault","isValid","obj","post","then","response","data","status","d","history","replace","signin","push","render","marginLeft","fontSize","color","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAY;AACRC,MAAAA,IAAI,EAAG;AAACC,QAAAA,KAAK,EAAG,EAAT;AAAaC,QAAAA,UAAU,EAAC,IAAxB;AAA8BC,QAAAA,OAAO,EAAG;AAAxC,OADC;AAERC,MAAAA,KAAK,EAAG;AAACH,QAAAA,KAAK,EAAG,EAAT;AAAaC,QAAAA,UAAU,EAAC,IAAxB;AAA8BC,QAAAA,OAAO,EAAE;AAAvC,OAFA;AAGRE,MAAAA,QAAQ,EAAG;AAACJ,QAAAA,KAAK,EAAG,EAAT;AAAaC,QAAAA,UAAU,EAAC,IAAxB;AAA8BC,QAAAA,OAAO,EAAC;AAAtC;AAHH,KAAZ;AAKA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBD,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDD,EAAAA,gBAAgB,CAACK,KAAD,EAAQ;AACpB,UAAM;AAACX,MAAAA,IAAD;AAAQC,MAAAA;AAAR,QAAiBU,KAAK,CAACC,MAA7B;AACA,QAAIb,KAAK,GAAG,KAAKA,KAAjB;AACAA,IAAAA,KAAK,CAACC,IAAD,CAAL,CAAYG,OAAZ,GAAsB,EAAtB;AACAJ,IAAAA,KAAK,CAACC,IAAD,CAAL,CAAYC,KAAZ,GAAoBA,KAApB;AACA,SAAKY,QAAL,CAAcd,KAAd;AACH;;AAEDS,EAAAA,iBAAiB,CAACG,KAAD,EAAO;AACpB,UAAM;AAACX,MAAAA,IAAD;AAAMC,MAAAA;AAAN,QAAeU,KAAK,CAACC,MAA3B;AACA,QAAIb,KAAK,GAAG,KAAKA,KAAjB;AACAA,IAAAA,KAAK,CAACC,IAAD,CAAL,CAAYG,OAAZ,GAAsB,EAAtB;AACAJ,IAAAA,KAAK,CAACC,IAAD,CAAL,CAAYC,KAAZ,GAAoBA,KAApB;AACA,SAAKY,QAAL,CAAcd,KAAd;AACH;;AAGDU,EAAAA,oBAAoB,CAACE,KAAD,EAAO;AACvB,UAAK;AAACX,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBU,KAAK,CAACC,MAA3B;AACA,QAAIb,KAAK,GAAG,KAAKA,KAAjB;AACAA,IAAAA,KAAK,CAACC,IAAD,CAAL,CAAYG,OAAZ,GAAsB,EAAtB;AACAJ,IAAAA,KAAK,CAACC,IAAD,CAAL,CAAYC,KAAZ,GAAoBA,KAApB;AACA,SAAKY,QAAL,CAAcd,KAAd;AACH;;AAEDe,EAAAA,QAAQ,GAAE;AACN,QAAIf,KAAK,GAAG,KAAKA,KAAjB;;AACA,QAAGN,SAAS,CAACsB,OAAV,CAAkBhB,KAAK,CAACC,IAAN,CAAWC,KAA7B,CAAH,EAAuC;AACnCF,MAAAA,KAAK,CAACC,IAAN,CAAWE,UAAX,GAAwB,KAAxB;AACAH,MAAAA,KAAK,CAACC,IAAN,CAAWG,OAAX,GAAqB,sBAArB;AACA,WAAKU,QAAL,CAAcd,KAAd;AACA,aAAO,KAAP;AACH;;AAED,QAAGN,SAAS,CAACsB,OAAV,CAAkBhB,KAAK,CAACK,KAAN,CAAYH,KAA9B,CAAH,EAAwC;AACpCF,MAAAA,KAAK,CAACK,KAAN,CAAYF,UAAZ,GAAyB,KAAzB;AACAH,MAAAA,KAAK,CAACK,KAAN,CAAYD,OAAZ,GAAsB,wBAAtB;AACA,WAAKU,QAAL,CAAcd,KAAd;AACA,aAAO,KAAP;AACH;;AAED,QAAG,CAACN,SAAS,CAACuB,OAAV,CAAkBjB,KAAK,CAACK,KAAN,CAAYH,KAA9B,CAAJ,EAAyC;AACrCF,MAAAA,KAAK,CAACK,KAAN,CAAYF,UAAZ,GAAyB,KAAzB;AACAH,MAAAA,KAAK,CAACK,KAAN,CAAYD,OAAZ,GAAsB,gBAAtB;AACA,WAAKU,QAAL,CAAcd,KAAd;AACA,aAAO,KAAP;AACH;;AAGD,QAAGN,SAAS,CAACsB,OAAV,CAAkBhB,KAAK,CAACM,QAAN,CAAeJ,KAAjC,CAAH,EAA2C;AACvCF,MAAAA,KAAK,CAACM,QAAN,CAAeH,UAAf,GAA4B,KAA5B;AACAH,MAAAA,KAAK,CAACM,QAAN,CAAeF,OAAf,GAAyB,0BAAzB;AACA,WAAKU,QAAL,CAAcd,KAAd;AACA,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDW,EAAAA,QAAQ,CAACC,KAAD,EAAO;AACXA,IAAAA,KAAK,CAACM,cAAN;AACA,UAAMC,OAAO,GAAG,KAAKJ,QAAL,EAAhB;;AACA,QAAGI,OAAH,EAAY;AACR,UAAIC,GAAG,GAAG,EAAV;AACAA,MAAAA,GAAG,CAACnB,IAAJ,GAAW,KAAKD,KAAL,CAAW,MAAX,EAAmBE,KAA9B;AACAkB,MAAAA,GAAG,CAACf,KAAJ,GAAY,KAAKL,KAAL,CAAW,OAAX,EAAoBE,KAAhC;AACAkB,MAAAA,GAAG,CAACd,QAAJ,GAAe,KAAKN,KAAL,CAAW,UAAX,EAAuBE,KAAtC;AAEAP,MAAAA,KAAK,CAAC0B,IAAN,CAAW,kCAAX,EAA8CD,GAA9C,EAAmDE,IAAnD,CAAyDC,QAAD,IAAY;AAChE,YAAGA,QAAQ,CAACC,IAAT,CAAcC,MAAd,KAAyB,IAA5B,EAAiC;AAC7B7B,UAAAA,IAAI,CAAC,YAAD,EACH,GAAE2B,QAAQ,CAACC,IAAT,CAAcpB,OAAQ,EADrB,EAEJ,SAFI,CAAJ,CAGEkB,IAHF,CAGQI,CAAD,IAAK;AACR,gBAAGA,CAAH,EAAM,OAAO,KAAK3B,KAAL,CAAW4B,OAAX,CAAmBC,OAAnB,CAA2B,GAA3B,CAAP;AACT,WALD;AAMH,SAPD,MAQI;AACAhC,UAAAA,IAAI,CAAE,OAAF,EACH,GAAE2B,QAAQ,CAACC,IAAT,CAAcpB,OAAQ,EADrB,EAEJ,OAFI,CAAJ,CAGEkB,IAHF,CAGQI,CAAD,IAAK;AACR,gBAAGA,CAAH,EAAM,OAAO,KAAK3B,KAAL,CAAW4B,OAAX,CAAmBC,OAAnB,CAA2B,SAA3B,CAAP;AACT,WALD;AAMH;AACJ,OAjBD;AAkBH;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAK9B,KAAL,CAAW4B,OAAX,CAAmBG,IAAnB,CAAwB,GAAxB,CAAP;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,UAAM/B,KAAK,GAAG,KAAKA,KAAnB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,KAAK,EAAI;AAACgC,QAAAA,UAAU,EAAC;AAAZ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAI,KAAKrB,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,SAAS,EAAC,cAA7B;AAA4C,MAAA,IAAI,EAAC,MAAjD;AAAwD,MAAA,KAAK,EAAIX,KAAK,CAACC,IAAN,CAAWC,KAA5E;AAAmF,MAAA,QAAQ,EAAI,KAAKK,gBAApG;AAAsH,MAAA,WAAW,EAAC,YAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI;AAAK,MAAA,KAAK,EAAE;AAAE0B,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACElC,KAAK,CAACC,IAAN,CAAWG,OADb,CAFJ,CADA,eAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAC,cAA9B;AAA6C,MAAA,IAAI,EAAC,OAAlD;AAA0D,MAAA,KAAK,EAAEJ,KAAK,CAACK,KAAN,CAAYH,KAA7E;AAAoF,MAAA,QAAQ,EAAI,KAAKO,iBAArG;AAAwH,MAAA,WAAW,EAAC,aAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEwB,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACElC,KAAK,CAACK,KAAN,CAAYD,OADd,CAFF,CAPF,eAaE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,SAAS,EAAC,cAAjC;AAAgD,MAAA,IAAI,EAAC,UAArD;AAAgE,MAAA,KAAK,EAAEJ,KAAK,CAACM,QAAN,CAAeJ,KAAtF;AAA6F,MAAA,QAAQ,EAAI,KAAKQ,oBAA9G;AAAoI,MAAA,WAAW,EAAC,gBAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEuB,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,KAAK,EAAE;AAAvB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACElC,KAAK,CAACM,QAAN,CAAeF,OADjB,CAFF,CAbF,eAmBI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBJ,CADJ,eAsBI;AAAG,MAAA,KAAK,EAAI;AAAC+B,QAAAA,SAAS,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAtBJ,eAuBA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAI,KAAKN,MAAL,CAAYrB,IAAZ,CAAiB,IAAjB,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBA,CAFJ,CADJ;AA8BH;;AA3I0B;;AA4I9B;AAED,eAAeX,MAAf","sourcesContent":["import React, {Component} from 'react';\nimport validator from 'validator';\nimport axios from 'axios';\nimport swal from 'sweetalert';\n\nclass signup extends Component {\n    constructor(props){\n        super(props);\n\n        this.state= {\n            name : {value : '', isValidate:true, message : ''},\n            email : {value : '', isValidate:true, message :''},\n            password : {value : '', isValidate:true, message:''}\n        }\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeEmail = this.handleChangeEmail.bind(this);\n        this.handleChangePassword = this.handleChangePassword.bind(this);\n        this.register = this.register.bind(this);\n    }\n\n    handleChangeName(event) {\n        const {name , value} = event.target;\n        let state = this.state;\n        state[name].message = ''\n        state[name].value = value;\n        this.setState(state);\n    };\n\n    handleChangeEmail(event){\n        const {name,value} = event.target;\n        let state = this.state;\n        state[name].message = ''\n        state[name].value = value;\n        this.setState(state);\n    };\n\n\n    handleChangePassword(event){\n        const{name, value} = event.target;\n        let state = this.state;\n        state[name].message = ''\n        state[name].value = value;\n        this.setState(state);\n    };\n\n    validate(){\n        let state = this.state;\n        if(validator.isEmpty(state.name.value)){\n            state.name.isValidate = false;\n            state.name.message = \"Name Cannot Be Blank\";\n            this.setState(state);\n            return false;\n        }\n\n        if(validator.isEmpty(state.email.value)){\n            state.email.isValidate = false;\n            state.email.message = \"E-mail Cannot Be Blank\";\n            this.setState(state);\n            return false;\n        }\n\n        if(!validator.isEmail(state.email.value)){\n            state.email.isValidate = false;\n            state.email.message = \"Invalid E-mail\";\n            this.setState(state);\n            return false;\n        }\n\n\n        if(validator.isEmpty(state.password.value)){\n            state.password.isValidate = false;\n            state.password.message = \"Password Cannot Be Blank\";\n            this.setState(state);\n            return false;\n        }\n        return true;\n    }\n\n    register(event){\n        event.preventDefault();\n        const isValid = this.validate();\n        if(isValid) {\n            let obj = {}\n            obj.name = this.state['name'].value;\n            obj.email = this.state['email'].value;\n            obj.password = this.state['password'].value;\n\n            axios.post('http://localhost:3100/api/signup',obj).then((response)=>{\n                if(response.data.status === true){\n                    swal(\"Successful\",\n                    `${response.data.message}`,\n                    \"success\",\n                    ).then((d)=>{\n                        if(d) return this.props.history.replace('/')\n                    })\n                }\n                else{\n                    swal (\"Error\",\n                    `${response.data.message}`,\n                    \"error\",\n                    ).then((d)=>{\n                        if(d) return this.props.history.replace('/signup')\n                    })\n                }\n            })\n        }\n    }\n\n    signin(){\n        return this.props.history.push('/');\n    }\n\n    render(){\n        const state = this.state;\n        return(\n            <div >\n              <h2 style = {{marginLeft:80}} >Registration Info</h2>\n                <div className=\"container\">\n                    <form onSubmit = {this.register}>\n                    <div className=\"form-group\">\n                        <input type=\"name\" className=\"form-control\" name=\"name\" value = {state.name.value} onChange = {this.handleChangeName} placeholder=\"Enter name\" />\n                        <div style={{ fontSize: 13, color: \"red\" }}>\n                         {state.name.message}\n                        </div>\n                       </div>\n                      <div className=\"form-group\">\n                        <input type=\"email\" className=\"form-control\" name=\"email\" value={state.email.value} onChange = {this.handleChangeEmail} placeholder=\"Enter email\" />\n                        <div style={{ fontSize: 13, color: \"red\" }}>\n                         {state.email.message}\n                        </div>\n                       </div>\n                      <div className=\"form-group\">\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={state.password.value} onChange = {this.handleChangePassword} placeholder=\"Enter password\" />\n                        <div style={{ fontSize: 13, color: \"red\" }}>\n                         {state.password.message}\n                        </div>\n                      </div>\n                        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\n                     </form>\n                    <p style = {{marginTop :10}} >Already You Have An Account ?</p>\n                <button type=\"submit\" className=\"btn btn-success\" onClick = {this.signin.bind(this)}>Login</button>\n                  </div>\n            </div>\n        )\n    }\n};\n\nexport default signup;"]},"metadata":{},"sourceType":"module"}